#!/usr/bin/env node

/*
 * Executable that will be available in the path by executing `npm install specificity-graph -g`.
 * If installed as a dependency the binary will be placed in node_modules/.bin/specificity-graph
 */

'use strict';

var fs            = require('fs'),
    path          = require('path'),
    colors        = require('cli-color'),
    commander       = require('commander'),
    open          = require('opn'),
    specificityGraph = require('../lib/index');

commander
  .usage('<cssFile>  [options]')
  .option('-o, --output [output]', 'Output destination')
  .option('-b --browser', 'Browser, open chart to view')
  .parse(process.argv);

var input = commander.args[0] ? path.resolve(commander.args[0]) : null;
var output = commander.output ? path.resolve(commander.output) : './specificity-graph';
var openInBrowser = commander.browser ? true : false;

function error(e) {
  console.log(colors.bold(colors.red('Specificity encounters an error')));
  console.log();
  console.log(e)
  e.stack && console.log(e.stack);
  process.exit(2);
}

if (!input){
  console.error(colors.red('Missing arguments'));
  console.log('usage: ' + '<cssFile>  [options]. See --help for more info');
  process.exit(1);
} else {
  if(!fs.existsSync(input)) {
    console.error(colors.red('Unable to read file'), input);
    process.exit(1);
  }

  try {
    var css = fs.readFileSync(input);

    specificityGraph(output, css, function (dest, err){
      if(err) {
        console.log(colors.yellow('[specificity-graph] The directory already exist'));
      }
      console.log(colors.blue('[specificity-graph]') + ' Write specificity in ' + dest);
      if(openInBrowser){
        open(path.join(dest, 'index.html'));
      }
    });

  }catch(e) {
    error(e);
  }
}
